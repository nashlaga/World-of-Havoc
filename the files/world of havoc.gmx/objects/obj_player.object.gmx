<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>player_body</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>fp</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialization

sped = 0
head = instance_nearest(x,y,o_player_head)
hp = 100
alarm[2] = 1
s = 0
maxspeed = 7
tsp = 0
mtsp = 1
alarm[0] = 7
audio_listener_orientation(0,1,0,0,0,1)
treadtimer = 15

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// I have no clue what this is -Cai
s = head.sh;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Speed and tread management

if sped &gt; maxspeed speed=maxspeed;
if sped &lt; -maxspeed speed=-maxspeed;

if !speed=0{
    td = instance_create(x,y,o_treads); //creates skid mark treads
    td.image_angle = direction;//sets skid mark angle
}
alarm[0]=treadtimer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step. Input, friction, head, direction, oh my!
delta = delta_time;
head=instance_nearest(x,y,o_player_head)

friction=0.05

if keyboard_check(ord("W")) {speed+=0.1}
if keyboard_check(ord("S")) {speed-=0.1}
if keyboard_check(ord("A")) {tsp+=0.01}
if keyboard_check(ord("D")) {tsp-=0.01}

if !keyboard_check(ord("A")) and !keyboard_check(ord("D")) {if tsp&gt;0 {tsp-=0.02} if tsp&lt;0 {tsp+=0.02}      }
if tsp&gt;mtsp {tsp=mtsp}
if tsp&lt;-mtsp {tsp=-mtsp}

image_angle=direction

direction+=tsp
/*if !x=o_player.x
{x=o_player_body.x}
if !y=o_player_body.y
{y=o_player_body.y}*/

if speed&gt;maxspeed{speed=maxspeed}
if speed&lt; -maxspeed{speed=-maxspeed}

audio_listener_position(x,y,0)



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_enemy_bodydead">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Do not have corpses; do we need them? -Cai

var a, xoff, yoff;
a = point_direction(x,y,other.x,other.y)
xoff = lengthdir_x(0.01,a);
yoff = lengthdir_y(0.01,a);
while(place_meeting(x,y,other))
{
    x -= xoff;
    y -= yoff;
    speed += -(speed/200);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Do we even use walls yet? -Cai

var a, xoff, yoff;
a = point_direction(x,y,other.x,other.y)
xoff = lengthdir_x(0.5,a);
yoff = lengthdir_y(0.5,a);
while(place_meeting(x,y,other))
{
    x -= xoff;
    y -= yoff;
    speed += -(speed/20);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_pshell1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Shell collision (damage)
if other.col = 0 {}/* What's this? */;
else {hp -= (global.shell1dam) / 4};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_enemy_body">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collision code [FIX THIS]

var a, xoff, yoff;

a = point_direction(x,y,other.x,other.y)
xoff = lengthdir_x(0.5,a);
yoff = lengthdir_y(0.5,a);

while(place_meeting(x,y,other))
{
    x -= xoff;
    y -= yoff;
    speed += -(speed/20)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drawing; healthbar and self.

draw_self()
draw_healthbar(x-32,y-64,x+32,y-58,hp,c_gray,c_red,c_green,90,1,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>64,70</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
